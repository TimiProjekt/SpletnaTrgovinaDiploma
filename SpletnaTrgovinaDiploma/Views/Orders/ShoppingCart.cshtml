@using SpletnaTrgovinaDiploma.Data.ViewModels
@model ShoppingCartViewModel

@{
    ViewData["Title"] = "Shopping cart summary";
}

<div class="row">


    @if (Model.ShoppingCart.ShoppingCartItems.Count == 0)
    {
        <p class="alert alert-primary w-100 ml-4 mr-4"> You have no items in your shopping cart </p>
        <a class="ml-4" asp-controller="Items" asp-action="Index"><u>Back to store</u></a>
    }
    else
    {
        <div class="col-md-8 offset-md-2">
            <p>
                <h2>Your shopping cart summary</h2>
            </p>
            <table class="table">
                <thead>
                    <tr>
                        <th>Item</th>
                        <th>Price</th>
                        <th>Subtotal</th>
                        <th>Amount</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ShoppingCart.ShoppingCartItems)
                    {
                        <tr>
                            <td class="align-middle">
                                <a asp-controller="Items" asp-action="Details" asp-route-id="@item.Item.Id">
                                    @item.Item.Name
                                </a>
                            </td>
                            <td class="align-middle">@item.Item.Price.ToString("c")</td>
                            <td class="align-middle">@((item.Amount*item.Item.Price).ToString("c"))</td>
                            <td class="align-middle">

                                @if (item.Amount > 1)
                                {
                                    <a asp-controller="Orders" asp-action="DecreaseItemInShoppingCart" asp-route-id="@item.Item.Id">
                                        <i class="bi bi-cart-dash text-danger"></i>
                                    </a>
                                }
                                else
                                {
                                    <i disabled class="bi bi-cart-dash text-muted"></i>
                                }

                                <input type="text" id="item_@item.Item.Id" class="text-center text-amount" style="width:30px" value="@item.Amount" />

                                <a class="text-success" asp-controller="Orders" asp-action="IncreaseItemInShoppingCart" asp-route-id="@item.Item.Id">
                                    <i class="bi bi-cart-plus"></i>
                                </a>

                            </td>
                            <td class="align-middle text-right">
                                <a class="text-dark" asp-controller="Orders" asp-action="RemoveItemFromShoppingCart" asp-route-id="@item.Item.Id">
                                    <i class="bi bi-cart-x"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="2"></td>
                        <td><b>Total:</b></td>
                        <td>
                            @Model.ShoppingCartTotal.ToString("c")
                        </td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
            <div class="text-right">
                <div class="btn-group">
                    @*<a class="btn btn-outline-primary" asp-action="CompleteOrder">
                        Complete order
                        </a>*@
                    @if (Model.HasAddress)
                    {
                        <div id="paypal-btn"></div>
                    }
                    <span style="padding:5px"></span>
                    <a class="btn btn-outline-success" asp-controller="Items" asp-action="Index">
                        Add more items
                    </a>
                </div>
            </div>

        </div>
    }


</div>

@section Scripts{

    <script type="text/javascript">
        $(function () {
            $(".text-amount").on('change', function () {
                var amount = $(this).val();
                var itemId = this.id.split("_")[1];

                $.ajax({
                    url: '/Orders/SetItemAmountInShoppingCart/' + itemId + '?amount=' + amount,
                    type: "POST",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    complete: function () {
                        location.reload();
                    }
                });
            });
        });
    </script>

    <script src="https://www.paypalobjects.com/api/checkout.js"></script>

    <script>

    let _total = @Html.Raw(Model.ShoppingCartTotal.ToString().Replace(",","."));

    paypal.Button.render({
        //Configure environment
        env: 'sandbox',
        client: {
            sandbox: 'AedPHZGttEHwn3tIFuG408Gbtuh71-WkeoHC4f-BiKlrLTV9KZ8G_qZWXMF2dgFEbx-yQHskJa9zugSA'
        },

        //Customize button
        locale: 'en_US',
        style: {
            size: 'small',
            color: 'gold',
            shape: 'pill'
        },
        commit: true,

        //Set up a payment
        payment: function (data, actions) {
            return actions.payment.create({
                transactions: [{
                    amount: {
                        total: _total,
                        currency: 'EUR'
                    }
                }]
            });
        },

        //Execute the payment
        onAuthorize: function (data, actions) {
            return actions.payment.execute().then(function () {
                var url = '@Url.Action("CompleteOrder", "Orders", new { })';
                window.location.href = url;
            });
        }

    }, '#paypal-btn');
    </script>
}